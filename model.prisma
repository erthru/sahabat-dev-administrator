// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  password  String
  role      UserRole
  fullname  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Post      Post[]
  Category  Category[]
  Tag       Tag[]
}

model Post {
  id          Int        @id @default(autoincrement())
  title       String     @unique
  body        String
  thumbnail   String
  slug        String     @unique
  status      PostStatus
  totalView   Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  publishedAt DateTime
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  category    Category   @relation(fields: [categoryId], references: [id])
  categoryId  Int
  usedTag     usedTag[]
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  slug      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  Post      Post[]
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  usedTag   usedTag[]
}

model usedTag {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  tag       Tag      @relation(fields: [tagId], references: [id])
  tagId     Int
}

enum UserRole {
  ADMIN
  USER
}

enum PostStatus {
  PUBLISHED
  UNPUBLISHED
}
